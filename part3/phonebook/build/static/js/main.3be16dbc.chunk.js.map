{"version":3,"sources":["components/Person.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","person","handleDelete","name","number","onClick","id","Persons","filter","filtered","persons","map","Notification","message","type","className","baseUrl","axios","get","then","response","data","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setfilter","setFiltered","notification","setNotification","useEffect","personsServices","res","catch","error","console","log","success","onChange","e","target","value","peopleFiltered","toLowerCase","includes","onSubmit","preventDefault","peoples","people","some","window","confirm","find","responsedPeople","setTimeout","updatePerson","concat","updateList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3be16dbc.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, handleDelete}) => (\n  <div>\n    <span> {person.name}</span>\n    <span> {person.number}</span>\n    <span> <button onClick={() => handleDelete(person.id)}>Delete</button> </span>\n  </div>\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person.js'\n\n\nconst Persons = ({ filter, filtered, persons, handleDelete }) => (\n\n  <div>\n    {filter === '' ? persons.map((person, id) => <Person key={id} person={person} handleDelete={handleDelete} />)\n\n      : filtered.map((person, id) => <Person key={id} person={person} handleDelete={handleDelete} />)}\n\n  </div>\n\n)\n\n\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n\n    <div className={type}>\n      {message}\n    </div>\n\n  )\n}\n\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/persons'\n\nconst getData = () => axios.get(baseUrl).then(response => response.data)\n\nconst saveData = (person) => axios.post(baseUrl, person).then(response => response.data);\n\nconst updateData = (id, data) => axios.put(`${baseUrl}/${id}`, data).then(response => response.data)\n\nconst deleteData = (id) => axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n\n\n\n\nexport default { getData, saveData, deleteData, updateData }","import React, { useState, useEffect } from 'react'\nimport './index.css'\n\nimport Persons from './components/Persons.js'\nimport Notification from './components/Notification.js'\n\nimport personsServices from './services/persons.js'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setfilter] = useState('')\n  const [filtered, setFiltered] = useState('')\n  const [notification, setNotification] = useState(null)\n\n\n  useEffect(() => personsServices.getData()\n    .then(res => setPersons(res))\n    .catch(error => console.log(error))\n    , [])\n\n\n  const handleFilter = e => {\n    setfilter(e.target.value)\n    const peopleFiltered = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n    setFiltered(peopleFiltered)\n  }\n\n  const handleDelete = id => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      setNotification({\n        success: `${person.name} was deleted`,\n        type: 'success'\n      })\n\n      setTimeout(() => {\n        setNotification(null)\n      }, 4000)\n      personsServices.deleteData(person.id)\n        .then(() => {\n          const updateList = persons.filter(person => person.id !== id)\n          setPersons(updateList)\n        })\n\n      return\n    }\n  }\n\n  const updatePerson = ({ name, number }) => {\n    const notification = window.confirm(`${name} is already added to phonebook. Replace the old number with a new one`)\n    if (notification) {\n      const person = persons.find(person => person.name === name)\n      personsServices.updateData(person.id, { name, number })\n        .then(responsedPeople => {\n          setPersons(persons.map(people => people.id !== person.id ? people : responsedPeople))\n          setNotification({\n            success: `${name} was updated`,\n            type: 'success'\n          })\n    \n          setTimeout(() => {\n            setNotification(null)\n          }, 4000)\n        })\n        .catch(() => {\n          setNotification({\n            success: `Information of ${name} has already been removed from server`,\n            type: 'error'\n          })\n          setPersons(persons.filter(people => people.id !== person.id))\n          \n          setTimeout(() => {\n            setNotification(null)\n          }, 4000)\n        })\n\n      return\n    }\n  }\n\n  const handleName = e => setNewName(e.target.value)\n\n  const handleNumber = e => setNewNumber(e.target.value)\n\n  const sendPerson = e => {\n    e.preventDefault()\n    const peoples = [...persons]\n    const people = { name: newName, number: newNumber }\n\n    const filtered = peoples.some(people => people.name === newName)\n    if (filtered) return updatePerson(people)\n\n    personsServices\n      .saveData(people)\n      .then(response => {\n        setPersons(peoples.concat(response))\n\n        setNotification({\n          success: `Added ${people.name}`,\n          type: 'success'\n        })\n    \n        setTimeout(() => {\n          setNotification(null)\n        }, 4000)\n      })\n      .catch(e => {\n        setNotification({\n          error: `${e.response.data.error}`,\n          type: 'error'\n        })\n    \n        setTimeout(() => {\n          setNotification(null)\n        }, 4000)\n      })\n      \n\n    \n\n  }\n\n\n  return (\n    <div>\n\n      <Notification message={notification?.success || notification?.error} type={notification ? notification.type : 'null'} />\n\n\n      <h2>Phonebook</h2>\n      <div>\n        filter shown with: <input onChange={handleFilter} />\n      </div>\n\n      <form onSubmit={sendPerson}>\n        <div>\n          name: <input onChange={handleName} />\n        </div>\n        <div>\n          number: <input onChange={handleNumber} />\n        </div>\n        <div>\n          <button type=\"submit\" >add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <Persons filter={filter} filtered={filtered} persons={persons} handleDelete={handleDelete} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}